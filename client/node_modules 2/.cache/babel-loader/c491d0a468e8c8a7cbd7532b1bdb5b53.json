{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ivantorres/Downloads/Desktop/react-practice/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Nav from './Components/Nav';\nimport Wrapper from './Components/Wrapper';\nimport WeatherContext from './Utils/WeatherContext';\nimport Footer from './Components/Footer';\nimport API from './Utils/API'; // use context \n// set the state for the current weather, put the value of the api\n\nfunction App() {\n  _s();\n\n  const [currentWeather, setCurrentWeather] = useState({\n    name: \"\",\n    temperature: \"\",\n    humidity: \"\",\n    Windspeed: \"\",\n    UVindex: \"\"\n  });\n  API.getWeather('New York').then(res => {\n    setCurrentWeather({\n      name: res.name\n    });\n  });\n  useEffect(() => {\n    console.log(currentWeather);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(WeatherContext.Provider, {\n      children: /*#__PURE__*/_jsxDEV(Wrapper, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 1\n  }, this);\n}\n\n_s(App, \"shN2ffxaJq2lLdJokmbLHvGppKQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ivantorres/Downloads/Desktop/react-practice/src/App.js"],"names":["React","useState","useEffect","Nav","Wrapper","WeatherContext","Footer","API","App","currentWeather","setCurrentWeather","name","temperature","humidity","Windspeed","UVindex","getWeather","then","res","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB,C,CAGA;AACA;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC;AACjDU,IAAAA,IAAI,EAAE,EAD2C;AAEjDC,IAAAA,WAAW,EAAE,EAFoC;AAGjDC,IAAAA,QAAQ,EAAE,EAHuC;AAIjDC,IAAAA,SAAS,EAAE,EAJsC;AAKjDC,IAAAA,OAAO,EAAE;AALwC,GAAD,CAApD;AAQJR,EAAAA,GAAG,CAACS,UAAJ,CAAe,UAAf,EAA2BC,IAA3B,CAAiCC,GAAD,IAAS;AACrCR,IAAAA,iBAAiB,CAAC;AACdC,MAAAA,IAAI,EAAEO,GAAG,CAACP;AADI,KAAD,CAAjB;AAGH,GAJD;AAMAT,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,OAAO,CAACC,GAAR,CAAYX,cAAZ;AACH,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACA;AAAA,4BACA,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,cAAD,CAAgB,QAAhB;AAAA,6BACA,QAAE,OAAF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFA,eAKA,QAAE,MAAF;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAYC;;GAjCQD,G;;KAAAA,G;AAsCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Nav from './Components/Nav'\nimport Wrapper from './Components/Wrapper'\nimport WeatherContext from './Utils/WeatherContext'\nimport Footer from './Components/Footer'\nimport API from './Utils/API'\n\n\n// use context \n// set the state for the current weather, put the value of the api\n\nfunction App() {\n\n    const [currentWeather, setCurrentWeather] = useState({\n        name: \"\",\n        temperature: \"\",\n        humidity: \"\",\n        Windspeed: \"\",\n        UVindex: \"\",\n    })\n\nAPI.getWeather('New York').then((res) => {\n    setCurrentWeather({\n        name: res.name \n    })\n})\n\nuseEffect(() => {\n    console.log(currentWeather)\n}, [])\n\n\nreturn (\n<div>\n<Nav />\n<WeatherContext.Provider>\n< Wrapper/>\n</WeatherContext.Provider>\n< Footer/>\n</div>\n\n\n)\n\n}\n\n\n\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}