{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ivantorres/Downloads/Desktop/react-practice/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Nav from './Components/Nav';\nimport WeatherContext from './Utils/WeatherContext';\nimport Footer from './Components/Footer';\nimport API from './Utils/API';\nimport moment from 'moment';\nimport Search from './Components/Search';\nimport History from './Components/History';\nimport Cards from './Components/Cards';\nimport Weather from './Components/Weather'; // use context \n// set the state for the current weather, put the value of the api\n\nfunction App() {\n  _s();\n\n  const [currentWeather, setCurrentWeather] = useState({\n    name: \"\",\n    temperature: \"\",\n    humidity: \"\",\n    Windspeed: \"\",\n    UVindex: \"\"\n  }); //   make the axios calls, then set the state of the weather, once thats done. \n  // use the vales of the state to fill in the props of compenents i.e Weather\n  // practice back end\n  // save the weather data to a data base then call it back when a button is pressed\n\n  function getWeather() {\n    const currentDate = moment().format(\" (dddd, MMMM Do YYYY)\");\n    API.getWeather('California').then(res => {\n      setCurrentWeather({ ...currentWeather,\n        name: res.data.name + currentDate,\n        temperature: \"Temperature: \" + res.data.main.temp + \"°\",\n        humidity: \"Humidity \" + res.data.main.humidity + \"%\",\n        Windspeed: \"Windspeed \" + res.data.wind.speed + \" MPH\"\n      });\n    });\n    console.log(currentWeather);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(WeatherContext.Provider, {\n      value: currentWeather,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conatiner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(Search, {\n              handleSearch: getWeather\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(Weather, {\n              name: currentWeather.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Cards, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 1\n  }, this);\n}\n\n_s(App, \"nAxHKZ2nM6e+DQbb8Wu2JG9WWXQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ivantorres/Downloads/Desktop/react-practice/src/App.js"],"names":["React","useState","useEffect","Nav","WeatherContext","Footer","API","moment","Search","History","Cards","Weather","App","currentWeather","setCurrentWeather","name","temperature","humidity","Windspeed","UVindex","getWeather","currentDate","format","then","res","data","main","temp","wind","speed","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CAGA;AACA;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC;AACjDc,IAAAA,IAAI,EAAE,EAD2C;AAEjDC,IAAAA,WAAW,EAAE,EAFoC;AAGjDC,IAAAA,QAAQ,EAAE,EAHuC;AAIjDC,IAAAA,SAAS,EAAE,EAJsC;AAKjDC,IAAAA,OAAO,EAAE;AALwC,GAAD,CAApD,CAFW,CAUf;AACA;AAEA;AACA;;AAIA,WAASC,UAAT,GAAsB;AAClB,UAAMC,WAAW,GAAGd,MAAM,GAAGe,MAAT,CAAgB,uBAAhB,CAApB;AACAhB,IAAAA,GAAG,CAACc,UAAJ,CAAe,YAAf,EAA6BG,IAA7B,CAAmCC,GAAD,IAAS;AACvCV,MAAAA,iBAAiB,CAAC,EACd,GAAGD,cADW;AAEdE,QAAAA,IAAI,EAAES,GAAG,CAACC,IAAJ,CAASV,IAAT,GAAgBM,WAFR;AAGdL,QAAAA,WAAW,EAAE,kBAAkBQ,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAcC,IAAhC,GAAuC,GAHtC;AAIdV,QAAAA,QAAQ,EAAE,cAAcO,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAcT,QAA5B,GAAuC,GAJnC;AAKdC,QAAAA,SAAS,EAAE,eAAeM,GAAG,CAACC,IAAJ,CAASG,IAAT,CAAcC,KAA7B,GAAqC;AALlC,OAAD,CAAjB;AAQH,KATD;AAUAC,IAAAA,OAAO,CAACC,GAAR,CAAYlB,cAAZ;AACH;;AAGD,sBACA;AAAA,4BACA,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAEA,cAAhC;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACY;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACA,QAAE,MAAF;AAAS,cAAA,YAAY,EAAEO;AAAvB;AAAA;AAAA;AAAA;AAAA,oBADA,eAEI,QAAE,OAAF;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACI,QAAE,OAAF;AAAU,cAAA,IAAI,EAAEP,cAAc,CAACE;AAA/B;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAE,KAAF;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFA,eAgBA,QAAE,MAAF;AAAA;AAAA;AAAA;AAAA,YAhBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAuBC;;GAzDQH,G;;KAAAA,G;AA8DT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Nav from './Components/Nav'\nimport WeatherContext from './Utils/WeatherContext'\nimport Footer from './Components/Footer'\nimport API from './Utils/API'\nimport moment from 'moment'\nimport Search from './Components/Search'\nimport History from './Components/History'\nimport Cards from './Components/Cards'\nimport Weather from './Components/Weather'\n\n\n// use context \n// set the state for the current weather, put the value of the api\n\nfunction App() {\n\n    const [currentWeather, setCurrentWeather] = useState({\n        name: \"\",\n        temperature: \"\",\n        humidity: \"\",\n        Windspeed: \"\",\n        UVindex: \"\",\n    })\n\n//   make the axios calls, then set the state of the weather, once thats done. \n// use the vales of the state to fill in the props of compenents i.e Weather\n\n// practice back end\n// save the weather data to a data base then call it back when a button is pressed\n\n\n\nfunction getWeather() {\n    const currentDate = moment().format(\" (dddd, MMMM Do YYYY)\");\n    API.getWeather('California').then((res) => {\n        setCurrentWeather({\n            ...currentWeather,\n            name: res.data.name + currentDate,\n            temperature: \"Temperature: \" + res.data.main.temp + \"°\",\n            humidity: \"Humidity \" + res.data.main.humidity + \"%\",\n            Windspeed: \"Windspeed \" + res.data.wind.speed + \" MPH\"\n        })\n       \n    })\n    console.log(currentWeather)\n}\n\n\nreturn (\n<div>\n<Nav />\n<WeatherContext.Provider value={currentWeather}>\n<div className=\"conatiner\">\n            <div className=\"row\">\n                <div className=\"col\">\n                < Search handleSearch={getWeather}/>\n                    < History/>\n                </div>\n                <div className=\"col\">\n                    < Weather name={currentWeather.name}/>\n                    < Cards/>\n                </div>\n            </div>\n        </div>\n</WeatherContext.Provider>\n< Footer/>\n</div>\n\n\n)\n\n}\n\n\n\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}