{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ivantorres/Downloads/Desktop/react-practice/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Nav from \"./Components/Nav\";\nimport WeatherContext from \"./Utils/WeatherContext\";\nimport Footer from \"./Components/Footer\";\nimport API from \"./Utils/API\";\nimport moment from \"moment\";\nimport Search from \"./Components/Search\";\nimport History from \"./Components/History\";\nimport Cards from \"./Components/Cards\";\nimport Weather from \"./Components/Weather\";\nimport './App.css'; // use context\n// set the state for the current weather, put the value of the api\n\nfunction App() {\n  _s();\n\n  const [inputState, setInputState] = useState(\"\");\n  const [currentWeather, setCurrentWeather] = useState({\n    name: \"\",\n    temperature: \"\",\n    humidity: \"\",\n    Windspeed: \"\",\n    UVindex: \"\"\n  });\n  const [fiveDay, setFiveDay] = useState([]);\n  const fiveDayArr = []; // for 5 day set the state of five day forcast then loop through the state using context\n  // practice back end\n  // save the weather data to a data base then call it back when a button is pressed\n\n  useEffect(() => {\n    API.addCity(currentWeather.name).then(res => {\n      console.log(res);\n    });\n  }, [currentWeather]);\n\n  function handleInput(event) {\n    const {\n      value\n    } = event.target;\n    setInputState(value);\n  }\n\n  async function getWeather() {\n    const currentDate = moment().format(\" (dddd, MMMM Do YYYY)\");\n    API.getWeather(inputState).then(res => {\n      const long = res.data.coord.lon;\n      const latt = res.data.coord.lat;\n      API.getUV(latt, long).then(response => {\n        const UVindexVal = response.data.value;\n        setCurrentWeather({ ...currentWeather,\n          name: res.data.name + currentDate,\n          temperature: \"Temperature: \" + res.data.main.temp + \"Â°\",\n          humidity: \"Humidity \" + res.data.main.humidity + \"%\",\n          Windspeed: \"Windspeed \" + res.data.wind.speed + \" MPH\",\n          UVindex: UVindexVal\n        });\n      });\n    });\n    API.get5Day(inputState).then(fiveRes => {\n      console.log(fiveRes.data);\n\n      for (let i = 0; i < 40; i = i + 8) {\n        fiveDayArr.push(fiveRes.data.list[i]);\n        console.log(fiveRes.data.list[i]);\n      }\n\n      setFiveDay(fiveDayArr);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conatiner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(Search, {\n            handleSearch: getWeather,\n            handleChange: handleInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(Weather, {\n            name: currentWeather.name,\n            temp: currentWeather.temperature,\n            humidity: currentWeather.humidity,\n            Windspeed: currentWeather.W,\n            UVindex: currentWeather.UVindex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(WeatherContext.Provider, {\n            value: fiveDay,\n            children: /*#__PURE__*/_jsxDEV(Cards, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5Z++1XmrA4kHBy7n0n0tHSiRrvc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ivantorres/Downloads/Desktop/react-practice/client/src/App.js"],"names":["React","useState","useEffect","Nav","WeatherContext","Footer","API","moment","Search","History","Cards","Weather","App","inputState","setInputState","currentWeather","setCurrentWeather","name","temperature","humidity","Windspeed","UVindex","fiveDay","setFiveDay","fiveDayArr","addCity","then","res","console","log","handleInput","event","value","target","getWeather","currentDate","format","long","data","coord","lon","latt","lat","getUV","response","UVindexVal","main","temp","wind","speed","get5Day","fiveRes","i","push","list","W"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Nav from \"./Components/Nav\";\nimport WeatherContext from \"./Utils/WeatherContext\";\nimport Footer from \"./Components/Footer\";\nimport API from \"./Utils/API\";\nimport moment from \"moment\";\nimport Search from \"./Components/Search\";\nimport History from \"./Components/History\";\nimport Cards from \"./Components/Cards\";\nimport Weather from \"./Components/Weather\";\nimport './App.css'\n\n// use context\n// set the state for the current weather, put the value of the api\n\nfunction App() {\n  const [inputState, setInputState] = useState(\"\");\n  const [currentWeather, setCurrentWeather] = useState({\n    name: \"\",\n    temperature: \"\",\n    humidity: \"\",\n    Windspeed: \"\",\n    UVindex: \"\",\n  });\n  const [fiveDay, setFiveDay] = useState([]);\n  const fiveDayArr = [];\n  // for 5 day set the state of five day forcast then loop through the state using context\n\n  // practice back end\n  // save the weather data to a data base then call it back when a button is pressed\nuseEffect(() => {\n    API.addCity(currentWeather.name).then((res) => {\n      console.log(res)\n    })\n}, [currentWeather])\n\n\n  function handleInput(event) {\n    const { value } = event.target;\n    setInputState(value);\n  }\n\n  async function getWeather() {\n    const currentDate = moment().format(\" (dddd, MMMM Do YYYY)\");\n    API.getWeather(inputState).then((res) => {\n      const long = res.data.coord.lon;\n      const latt = res.data.coord.lat;\n      API.getUV(latt, long).then((response) => {\n        const UVindexVal = response.data.value;\n        setCurrentWeather({\n          ...currentWeather,\n          name: res.data.name + currentDate,\n          temperature: \"Temperature: \" + res.data.main.temp + \"Â°\",\n          humidity: \"Humidity \" + res.data.main.humidity + \"%\",\n          Windspeed: \"Windspeed \" + res.data.wind.speed + \" MPH\",\n          UVindex: UVindexVal,\n        });\n      });\n    });\n\n    API.get5Day(inputState).then((fiveRes) => {\n      console.log(fiveRes.data);\n      for (let i = 0; i < 40; i = i + 8) {\n        fiveDayArr.push(fiveRes.data.list[i]);\n        console.log(fiveRes.data.list[i]);\n      }\n\n      setFiveDay(fiveDayArr);\n    });\n  }\n\n  return (\n    <div>\n      <Nav />\n\n      <div className=\"conatiner\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Search handleSearch={getWeather} handleChange={handleInput} />\n            <History />\n          </div>\n          <div className=\"col\">\n            <Weather\n              name={currentWeather.name}\n              temp={currentWeather.temperature}\n              humidity={currentWeather.humidity}\n              Windspeed={currentWeather.W}\n              UVindex={currentWeather.UVindex}\n            />\n            <WeatherContext.Provider value={fiveDay}>\n              <Cards />\n            </WeatherContext.Provider>\n          </div>\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}