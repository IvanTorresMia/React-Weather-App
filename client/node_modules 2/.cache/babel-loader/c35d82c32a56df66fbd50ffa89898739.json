{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ivantorres/Downloads/Desktop/react-practice/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Nav from \"./Components/Nav\";\nimport WeatherContext from \"./Utils/WeatherContext\";\nimport Footer from \"./Components/Footer\";\nimport API from \"./Utils/API\";\nimport moment from \"moment\";\nimport Search from \"./Components/Search\";\nimport History from \"./Components/History\";\nimport Cards from \"./Components/Cards\";\nimport Weather from \"./Components/Weather\"; // use context\n// set the state for the current weather, put the value of the api\n\nfunction App() {\n  _s();\n\n  const [inputState, setInputState] = useState(\"\");\n  const [currentWeather, setCurrentWeather] = useState({\n    name: \"\",\n    temperature: \"\",\n    humidity: \"\",\n    Windspeed: \"\",\n    UVindex: \"\"\n  });\n  const [fiveDay, setFiveDay] = useState(); // for 5 day set the state of five day forcast then loop through the state using context\n  // practice back end\n  // save the weather data to a data base then call it back when a button is pressed\n\n  function handleInput(event) {\n    const {\n      value\n    } = event.target;\n    setInputState(value);\n  }\n\n  function getWeather() {\n    const currentDate = moment().format(\" (dddd, MMMM Do YYYY)\");\n    API.getWeather(inputState).then(res => {\n      const long = res.data.coord.lon;\n      const latt = res.data.coord.lat;\n      API.getUV(latt, long).then(response => {\n        const UVindexVal = response.data.value;\n        setCurrentWeather({ ...currentWeather,\n          name: res.data.name + currentDate,\n          temperature: \"Temperature: \" + res.data.main.temp + \"Â°\",\n          humidity: \"Humidity \" + res.data.main.humidity + \"%\",\n          Windspeed: \"Windspeed \" + res.data.wind.speed + \" MPH\",\n          UVindex: UVindexVal\n        });\n      });\n    });\n    API.get5Day(inputState).then(res => {\n      const fiveDayArr = [];\n\n      for (let i = 0; i < 40; i = i + 8) {\n        fiveDayArr.push(res.data[i]);\n        console.log(res.data[i]);\n      }\n\n      setFiveDay(fiveDayArr);\n    });\n    console.log(fiveDay);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherContext.Provider, {\n      value: currentWeather,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conatiner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(Search, {\n              handleSearch: getWeather,\n              handleChange: handleInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(Weather, {\n              name: currentWeather.name,\n              temp: currentWeather.temperature,\n              humidity: currentWeather.humidity,\n              Windspeed: currentWeather.W,\n              UVindex: currentWeather.UVindex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Cards, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aY0r2yCVjMCPAgCDNMB4z2IUx28=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ivantorres/Downloads/Desktop/react-practice/src/App.js"],"names":["React","useState","useEffect","Nav","WeatherContext","Footer","API","moment","Search","History","Cards","Weather","App","inputState","setInputState","currentWeather","setCurrentWeather","name","temperature","humidity","Windspeed","UVindex","fiveDay","setFiveDay","handleInput","event","value","target","getWeather","currentDate","format","then","res","long","data","coord","lon","latt","lat","getUV","response","UVindexVal","main","temp","wind","speed","get5Day","fiveDayArr","i","push","console","log","W"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Nav from \"./Components/Nav\";\nimport WeatherContext from \"./Utils/WeatherContext\";\nimport Footer from \"./Components/Footer\";\nimport API from \"./Utils/API\";\nimport moment from \"moment\";\nimport Search from \"./Components/Search\";\nimport History from \"./Components/History\";\nimport Cards from \"./Components/Cards\";\nimport Weather from \"./Components/Weather\";\n\n// use context\n// set the state for the current weather, put the value of the api\n\nfunction App() {\n  const [inputState, setInputState] = useState(\"\");\n  const [currentWeather, setCurrentWeather] = useState({\n    name: \"\",\n    temperature: \"\",\n    humidity: \"\",\n    Windspeed: \"\",\n    UVindex: \"\",\n  });\n  const [fiveDay, setFiveDay] = useState();\n  // for 5 day set the state of five day forcast then loop through the state using context\n\n  // practice back end\n  // save the weather data to a data base then call it back when a button is pressed\n\n  function handleInput(event) {\n    const { value } = event.target;\n    setInputState(value);\n  }\n\n  function getWeather() {\n    const currentDate = moment().format(\" (dddd, MMMM Do YYYY)\");\n    API.getWeather(inputState).then((res) => {\n      const long = res.data.coord.lon;\n      const latt = res.data.coord.lat;\n      API.getUV(latt, long).then((response) => {\n        const UVindexVal = response.data.value;\n        setCurrentWeather({\n          ...currentWeather,\n          name: res.data.name + currentDate,\n          temperature: \"Temperature: \" + res.data.main.temp + \"Â°\",\n          humidity: \"Humidity \" + res.data.main.humidity + \"%\",\n          Windspeed: \"Windspeed \" + res.data.wind.speed + \" MPH\",\n          UVindex: UVindexVal,\n        });\n      });\n    });\n\n    API.get5Day(inputState).then((res) => {\n       const fiveDayArr = [];\n\n       for (let i = 0; i < 40; i = i +8) {\n           fiveDayArr.push(res.data[i])\n           console.log(res.data[i])\n       }\n\n       setFiveDay(fiveDayArr)\n    })\n\n    console.log(fiveDay)\n  }\n\n  return (\n    <div>\n      <Nav />\n      <WeatherContext.Provider value={currentWeather}>\n        <div className=\"conatiner\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <Search handleSearch={getWeather} handleChange={handleInput} />\n              <History />\n            </div>\n            <div className=\"col\">\n              <Weather\n                name={currentWeather.name}\n                temp={currentWeather.temperature}\n                humidity={currentWeather.humidity}\n                Windspeed={currentWeather.W}\n                UVindex={currentWeather.UVindex}\n              />\n              <Cards />\n            </div>\n          </div>\n        </div>\n      </WeatherContext.Provider>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}